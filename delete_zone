#!/bin/bash
zone_backup()
{
	aws route53 list-resource-record-sets --hosted-zone-id "$2" --output text > input.txt
	backup=$1.zonefile.bkup
	touch $backup
	echo "\$ORIGIN $1." > $backup
	while read line
	do
        	name=`echo $line | awk '{print $1}'`
	        if [ $name == RESOURCERECORDSETS ]
        	then
        		noffields=`echo $line | wc -w`
        		if [ $noffields -eq 4 ]
        		then
                		recordname=`echo $line | awk '{print $2}'`
	                	recordttl=`echo $line  | awk '{print $3}'`
        	        	recordtype=`echo $line | awk '{print $4}'`
                	else
                		recordname=`echo $line | awk '{print $2}'`
	                	recordtype=`echo $line | awk '{print $3}'`
        	        fi
	        else
        	        recordvalue=`echo $line | awk '{for (i=2; i<NF; i++) printf $i " "; print $NF}'`
                	echo "$recordname       $recordttl    IN      $recordtype     $recordvalue" >> $backup
		fi
	done < input.txt

	mv $backup /data/home/rpanda/aws/new/backupdir/$backup
	echo "Backup of $1 zone has been taken" | tee -a log/$0.log
	echo "================================" | tee -a log/$0.log
	cat /data/home/rpanda/aws/new/backupdir/$backup | tee -a log/$0.log
	echo "================================" | tee -a log/$0.log
	echo "Backup Location : /data/home/rpanda/aws/new/backupdir/$backup" | tee -a log/$0.log
}

a_record()
{
        domainname=`echo $1 | awk -F"." '{print $(NF-1)"."$NF}'`
        hostid=`aws route53 list-hosted-zones --output text | grep -w $domainname | awk -F"/" '{print $3}' | awk '{print $1}'`
        aws route53 list-resource-record-sets --hosted-zone-id $hostid --output text | grep $1 -A 20 > input.txt
        inc1=0
        Atype=NULL
	count=0
	inc2=0

        while read line
        do
                name=`echo $line | awk '{print $1}'`
                noffields=`echo $line | wc -w`
                if [ $name == RESOURCERECORDSETS ]
                then
                        if [ $noffields -eq 4 ]
                        then
                        	recordname=`echo $line | awk '{print $2}'`
	                        recordttl=`echo $line  | awk '{print $3}'`
        	                recordtype=`echo $line | awk '{print $4}'`
				if [ $recordtype == 'A' ]
				then
					((++count))
					inc2=$inc1
					inc1=0
				fi
                        else
                                recordname=`echo $line | awk '{print $2}'`
                                recordtype=`echo $line | awk '{print $3}'`
                        fi
                elif [ $name == ALIASTARGET ]
                then
                        dnsname=`echo $line | awk '{print $2}'`
                        targethealth=`echo $line | awk '{print $3}' | tr [A-Z] [a-z]`
                        aliashostid=`echo $line | awk '{print $4}'`

                        echo "{" > change-rr-sets.json
                        echo "    \"Changes\": [" >> change-rr-sets.json
                        echo "        {" >> change-rr-sets.json
                        echo "            \"Action\": \"DELETE\"," >> change-rr-sets.json
                        echo "            \"ResourceRecordSet\": {" >> change-rr-sets.json
                        echo "                \"Name\": \"$recordname\"," >> change-rr-sets.json
                        echo "                \"Type\": \"$recordtype\"," >> change-rr-sets.json
                        echo "            \"AliasTarget\": {" >> change-rr-sets.json
                        echo "                          \"HostedZoneId\": \"$aliashostid\"," >> change-rr-sets.json
                        echo "                  \"DNSName\": \"$dnsname\"," >> change-rr-sets.json
                        echo "                  \"EvaluateTargetHealth\": $targethealth" >> change-rr-sets.json
                        echo "                  }" >> change-rr-sets.json
                        echo "            }" >> change-rr-sets.json
                        echo "        }" >> change-rr-sets.json
                        echo "    ]" >> change-rr-sets.json
                        echo "}" >> change-rr-sets.json

			echo "Deleting Alias: $recordname	300	IN	$recordtype	$dnsname	$targethealth	$aliashostid" | tee -a log/$0.log
                        aws route53 change-resource-record-sets --hosted-zone-id "$hostid" --change-batch file:///data/home/rpanda/aws/new/change-rr-sets.json 2>&1 | tee -a log/$0.log
                else
                   	recordvalue=`echo $line | awk '{for (i=2; i<NF; i++) printf $i " "; print $NF}'`
			if [ $count -eq 2 ]
                    	then
                        	count=1
				echo "{" > change-rr-sets.json
			        echo "    \"Changes\": [" >> change-rr-sets.json
			        echo "        {" >> change-rr-sets.json
			        echo "            \"Action\": \"DELETE\"," >> change-rr-sets.json
			        echo "            \"ResourceRecordSet\": {" >> change-rr-sets.json
			        echo "                \"Name\": \"$Aname\"," >> change-rr-sets.json
			        echo "                \"Type\": \"$Atype\"," >> change-rr-sets.json
			        echo "                \"TTL\": $Attl," >> change-rr-sets.json
			        echo "                \"ResourceRecords\": [" >> change-rr-sets.json
			        for i in `seq $inc2`
			        do
			                echo "                    {" >> change-rr-sets.json
			                echo "                        \"Value\": \"${Arec[$i]}\"" >> change-rr-sets.json
			                echo "          }," >> change-rr-sets.json
			        done
			        let n="($inc2 * 3) + 9"
			        sed -i "$n s/},/}/" change-rr-sets.json
			        echo "                ]" >> change-rr-sets.json
			        echo "            }" >> change-rr-sets.json
			        echo "        }" >> change-rr-sets.json
			        echo "    ]" >> change-rr-sets.json
			        echo "}" >> change-rr-sets.json

				echo "Deleting record : $Aname	$Attl	IN	$Atype	${Arec[*]}" | tee -a log/$0.log
			        aws route53 change-resource-record-sets --hosted-zone-id $hostid --change-batch file:///data/home/rpanda/aws/new/change-rr-sets.json 2>&1 | tee -a log/$0.log
        	        fi
			if [ $recordtype == 'A' ]
        	        then
                   		 ((inc1++))
	                         Arec[$inc1]="$recordvalue"
        	                 Atype=$recordtype
                	         Aname=$recordname
                        	 Attl=$recordttl
                    	fi
                fi
        done < input.txt
	if [ $2 -eq 0 ]
	then
		echo "{" > change-rr-sets.json
		echo "    \"Changes\": [" >> change-rr-sets.json
		echo "        {" >> change-rr-sets.json
		echo "            \"Action\": \"DELETE\"," >> change-rr-sets.json
		echo "            \"ResourceRecordSet\": {" >> change-rr-sets.json
		echo "                \"Name\": \"$Aname\"," >> change-rr-sets.json
		echo "                \"Type\": \"$Atype\"," >> change-rr-sets.json
		echo "                \"TTL\": $Attl," >> change-rr-sets.json
		echo "                \"ResourceRecords\": [" >> change-rr-sets.json
		for i in `seq $inc1`
		do
		    echo "                    {" >> change-rr-sets.json
		    echo "                        \"Value\": \"${Arec[$i]}\"" >> change-rr-sets.json
		    echo "          }," >> change-rr-sets.json
		done
		let n="($inc1 * 3) + 9"
		sed -i "$n s/},/}/" change-rr-sets.json
		echo "                ]" >> change-rr-sets.json
		echo "            }" >> change-rr-sets.json
		echo "        }" >> change-rr-sets.json
		echo "    ]" >> change-rr-sets.json
		echo "}" >> change-rr-sets.json

		echo "Deleting record : $Aname  $Attl   IN      $Atype  ${Arec[*]}" | tee -a log/$0.log
		aws route53 change-resource-record-sets --hosted-zone-id $hostid --change-batch file:///data/home/rpanda/aws/new/change-rr-sets.json 2>&1 | tee -a log/$0.log
	fi
}

cname_record()
{
	domainname=`echo $1 | awk -F"." '{print $(NF-1)"."$NF}'`
	hostid=`aws route53 list-hosted-zones --output text | grep -w $domainname | awk -F"/" '{print $3}' | awk '{print $1}'`
	aws route53 list-resource-record-sets --hosted-zone-id $hostid --output text | grep $1 -A 1  > input.txt

	while read line	
	do
		name=`echo $line | awk '{print $1}'`
		noffields=`echo $line | wc -w`
		if [ $name == RESOURCERECORDSETS ]
		then
			if [ $noffields -eq 4 ]
			then
                		recordname=`echo $line | awk '{print $2}'`
		                recordttl=`echo $line  | awk '{print $3}'`
		                recordtype=`echo $line | awk '{print $4}'`
			else
				recordname=`echo $line | awk '{print $2}'`
				recordtype=`echo $line | awk '{print $3}'`
			fi
		elif [ $name == ALIASTARGET ]
	        then
    			dnsname=`echo $line | awk '{print $2}'`
       			targethealth=`echo $line | awk '{print $3}' | tr [A-Z] [a-z]`
       			aliashostid=`echo $line | awk '{print $4}'`

       			echo "{" > change-rr-sets.json 
			echo "    \"Changes\": [" >> change-rr-sets.json
			echo "        {" >> change-rr-sets.json
			echo "            \"Action\": \"DELETE\"," >> change-rr-sets.json
			echo "            \"ResourceRecordSet\": {" >> change-rr-sets.json
       			echo "                \"Name\": \"$recordname\"," >> change-rr-sets.json
       			echo "                \"Type\": \"$recordtype\"," >> change-rr-sets.json
       			echo "            \"AliasTarget\": {" >> change-rr-sets.json
       			echo "            		\"HostedZoneId\": \"$aliashostid\"," >> change-rr-sets.json
       			echo "			\"DNSName\": \"$dnsname\"," >> change-rr-sets.json
       			echo "          		\"$targethealth\": false" >> change-rr-sets.json
       			echo "        		}" >> change-rr-sets.json
       			echo "            }" >> change-rr-sets.json
       			echo "        }" >> change-rr-sets.json
       			echo "    ]" >> change-rr-sets.json
       			echo "}" >> change-rr-sets.json

			echo "Deleting Alias: $recordname       300     IN      $recordtype     $dnsname        $targethealth   $aliashostid" | tee -a log/$0.log
       			aws route53 change-resource-record-sets --hosted-zone-id "$hostid" --change-batch file:///data/home/rpanda/aws/new/change-rr-sets.json 2>&1 | tee -a log/$0.log
	    	else
		        recordvalue=`echo $line | awk '{for (i=2; i<NF; i++) printf $i " "; print $NF}'`
			if [ $recordtype == 'CNAME' ]
			then
				echo "{" > change-rr-sets.json
                        	echo "    \"Changes\": [" >> change-rr-sets.json
	                        echo "        {" >> change-rr-sets.json
        	                echo "            \"Action\": \"DELETE\"," >> change-rr-sets.json
                	        echo "            \"ResourceRecordSet\": {" >> change-rr-sets.json
                        	echo "                \"Name\": \"$recordname\"," >> change-rr-sets.json
	                        echo "                \"Type\": \"$recordtype\"," >> change-rr-sets.json
        	                echo "                \"TTL\": $recordttl," >> change-rr-sets.json
                	        echo "                \"ResourceRecords\": [" >> change-rr-sets.json
                        	echo "                    {" >> change-rr-sets.json
	                        echo "                        \"Value\": \"$recordvalue\"" >> change-rr-sets.json
        	                echo "                    }" >> change-rr-sets.json
                	        echo "                ]" >> change-rr-sets.json
                        	echo "            }" >> change-rr-sets.json
	                        echo "        }" >> change-rr-sets.json
        	                echo "    ]" >> change-rr-sets.json
                	        echo "}" >> change-rr-sets.json

				echo "Deleting record : $recordname  $recordttl   IN      $recordtype  $recordvalue" | tee -a log/$0.log
				aws route53 change-resource-record-sets --hosted-zone-id $hostid --change-batch file:///data/home/rpanda/aws/new/change-rr-sets.json 2>&1 | tee -a log/$0.log
			fi
		fi
	done < input.txt
}

txt_record()
{
        domainname=`echo $1 | awk -F"." '{print $(NF-1)"."$NF}'`
        hostid=`aws route53 list-hosted-zones --output text | grep -w $domainname | awk -F"/" '{print $3}' | awk '{print $1}'`
        aws route53 list-resource-record-sets --hosted-zone-id $hostid --output text | grep $1 -A 10 > input.txt
        inc1=0
        TXTtype=NULL
        count=0
        inc2=0

	while read line
        do
                name=`echo $line | awk '{print $1}'`
                if [ $name == RESOURCERECORDSETS ]
                then
                        recordname=`echo $line | awk '{print $2}'`
                        recordttl=`echo $line  | awk '{print $3}'`
                        recordtype=`echo $line | awk '{print $4}'`
                        if [ $recordtype == 'TXT' ]
                        then
                                ((++count))
                                inc2=$inc1
                                inc1=0
                        fi
                else
                        recordvalue=`echo $line | awk '{for (i=2; i<NF; i++) printf $i " "; print $NF}' | sed 's/\"//g'`
                        if [ $count -eq 2 ]
                        then
                                count=1
                                echo "{" > change-rr-sets.json
                                echo "    \"Changes\": [" >> change-rr-sets.json
                                echo "        {" >> change-rr-sets.json
                                echo "            \"Action\": \"DELETE\"," >> change-rr-sets.json
                                echo "            \"ResourceRecordSet\": {" >> change-rr-sets.json
                                echo "                \"Name\": \"$TXTname\"," >> change-rr-sets.json
                                echo "                \"Type\": \"$TXTtype\"," >> change-rr-sets.json
                                echo "                \"TTL\": $TXTttl," >> change-rr-sets.json
                                echo "                \"ResourceRecords\": [" >> change-rr-sets.json
                                for i in `seq $inc2`
                                do
                                        echo "                    {" >> change-rr-sets.json
                                        echo "                        \"Value\": \"\\\"${TXTrec[$i]}\\\"\"" >> change-rr-sets.json
                                        echo "          }," >> change-rr-sets.json
                                done
                                let n="($inc2 * 3) + 9"
                                sed -i "$n s/},/}/" change-rr-sets.json
                                echo "                ]" >> change-rr-sets.json
                                echo "            }" >> change-rr-sets.json
                                echo "        }" >> change-rr-sets.json
                                echo "    ]" >> change-rr-sets.json
                                echo "}" >> change-rr-sets.json

				echo "Deleting record : $TXTname  $TXTttl   IN      $TXTtype  ${TXTrec[*]}" | tee -a log/$0.log
                                aws route53 change-resource-record-sets --hosted-zone-id $hostid --change-batch file:///data/home/rpanda/aws/new/change-rr-sets.json 2>&1 | tee -a log/$0.log
                        fi
                        if [ $recordtype == 'TXT' ]
                        then
                                ((inc1++))
                                TXTrec[$inc1]=$recordvalue
                                TXTtype=$recordtype
                                TXTname=$recordname
                                TXTttl=$recordttl
                        fi
                fi
        done < input.txt
        if [ $2 -eq 0 ]
        then
                echo "{" > change-rr-sets.json
                echo "    \"Changes\": [" >> change-rr-sets.json
                echo "        {" >> change-rr-sets.json
                echo "            \"Action\": \"DELETE\"," >> change-rr-sets.json
                echo "            \"ResourceRecordSet\": {" >> change-rr-sets.json
                echo "                \"Name\": \"$TXTname\"," >> change-rr-sets.json
                echo "                \"Type\": \"$TXTtype\"," >> change-rr-sets.json
                echo "                \"TTL\": $TXTttl," >> change-rr-sets.json
                echo "                \"ResourceRecords\": [" >> change-rr-sets.json
                for i in `seq $inc1`
                do
                        echo "                    {" >> change-rr-sets.json
                        echo "                        \"Value\": \"\\\"${TXTrec[$i]}\\\"\"" >> change-rr-sets.json
                        echo "          }," >> change-rr-sets.json
                done
                let n="($inc1 * 3) + 9"
                sed -i "$n s/},/}/" change-rr-sets.json
                echo "                ]" >> change-rr-sets.json
                echo "            }" >> change-rr-sets.json
                echo "        }" >> change-rr-sets.json
                echo "    ]" >> change-rr-sets.json
                echo "}" >> change-rr-sets.json

		echo "Deleting record : $TXTname  $TXTttl   IN      $TXTtype  ${TXTrec[*]}" | tee -a log/$0.log
                aws route53 change-resource-record-sets --hosted-zone-id $hostid --change-batch file:///data/home/rpanda/aws/new/change-rr-sets.json 2>&1 | tee -a log/$0.log
        fi

}

mx_record()
{
        domainname=`echo $1 | awk -F"." '{print $(NF-1)"."$NF}'`
        hostid=`aws route53 list-hosted-zones --output text | grep -w $domainname | awk -F"/" '{print $3}' | awk '{print $1}'`
        aws route53 list-resource-record-sets --hosted-zone-id $hostid --output text | grep $1 -A 6 > input.txt
        inc1=0
        MXtype=NULL
        count=0
        inc2=0

	while read line
        do
                name=`echo $line | awk '{print $1}'`
                noffields=`echo $line | wc -w`
                if [ $name == RESOURCERECORDSETS ]
                then
                        recordname=`echo $line | awk '{print $2}'`
                        recordttl=`echo $line  | awk '{print $3}'`
                        recordtype=`echo $line | awk '{print $4}'`
                        if [ $recordtype == 'MX' ]
                        then
                                ((++count))
                                inc2=$inc1
                                inc1=0
                        fi
                else
                        recordvalue=`echo $line | awk '{for (i=2; i<NF; i++) printf $i " "; print $NF}'`
                        if [ $count -eq 2 ]
                        then
                        	count=1
                        	echo "{" > change-rr-sets.json
                        	echo "    \"Changes\": [" >> change-rr-sets.json
	                        echo "        {" >> change-rr-sets.json
    	                        echo "            \"Action\": \"DELETE\"," >> change-rr-sets.json
        	                echo "            \"ResourceRecordSet\": {" >> change-rr-sets.json
                                echo "                \"Name\": \"$MXname\"," >> change-rr-sets.json
                	        echo "                \"Type\": \"$MXtype\"," >> change-rr-sets.json
                                echo "                \"TTL\": $MXttl," >> change-rr-sets.json
                        	echo "                \"ResourceRecords\": [" >> change-rr-sets.json
	                        for i in `seq $inc2`
    	                        do
        	                    echo "                    {" >> change-rr-sets.json
            	                    echo "                        \"Value\": \"${MXrec[$i]}\"" >> change-rr-sets.json
                	            echo "          }," >> change-rr-sets.json
                    	        done
                        	let n="($inc2 * 3) + 9"
	                        sed -i "$n s/},/}/" change-rr-sets.json
    	                        echo "                ]" >> change-rr-sets.json
        	                echo "            }" >> change-rr-sets.json
            	                echo "        }" >> change-rr-sets.json
                	        echo "    ]" >> change-rr-sets.json
                    	        echo "}" >> change-rr-sets.json

				echo "Deleting record : $MXname  $MXttl   IN      $MXtype  ${MXrec[*]}" | tee -a log/$0.log	
                        	aws route53 change-resource-record-sets --hosted-zone-id $hostid --change-batch file:///data/home/rpanda/aws/new/change-rr-sets.json 2>&1 | tee -a log/$0.log
                        fi
                        if [ $recordtype == 'MX' ]
                        then
                                ((inc1++))
                                MXrec[$inc1]="$recordvalue"
                                MXtype=$recordtype
                                MXname=$recordname
                                MXttl=$recordttl
                        fi
                fi
        done < input.txt
        if [ $2 -eq 0 ]
        then
	       	echo "{" > change-rr-sets.json
	        echo "    \"Changes\": [" >> change-rr-sets.json
	        echo "        {" >> change-rr-sets.json
	        echo "            \"Action\": \"DELETE\"," >> change-rr-sets.json
	        echo "            \"ResourceRecordSet\": {" >> change-rr-sets.json
	        echo "                \"Name\": \"$MXname\"," >> change-rr-sets.json
	        echo "                \"Type\": \"$MXtype\"," >> change-rr-sets.json
	        echo "                \"TTL\": $MXttl," >> change-rr-sets.json
	        echo "                \"ResourceRecords\": [" >> change-rr-sets.json
	        for i in `seq $inc1`
	        do
	             echo "                    {" >> change-rr-sets.json
	             echo "                        \"Value\": \"${MXrec[$i]}\"" >> change-rr-sets.json
	             echo "          }," >> change-rr-sets.json
	        done
	        let n="($inc1 * 3) + 9"
	        sed -i "$n s/},/}/" change-rr-sets.json
	        echo "                ]" >> change-rr-sets.json
	        echo "            }" >> change-rr-sets.json
	        echo "        }" >> change-rr-sets.json
	        echo "    ]" >> change-rr-sets.json
	        echo "}" >> change-rr-sets.json

		echo "Deleting record : $MXname  $MXttl   IN      $MXtype  ${MXrec[*]}" | tee -a log/$0.log
	        aws route53 change-resource-record-sets --hosted-zone-id $hostid --change-batch file:///data/home/rpanda/aws/new/change-rr-sets.json 2>&1 | tee -a log/$0.log
        fi
}

remove_a_record()
{
	echo "Enter the record name which you would like to delete"
        read record
        domainname=`echo $record | awk -F"." '{print $(NF-1)"."$NF}'`
        hostid=`aws route53 list-hosted-zones --output text | grep -w $domainname | awk -F"/" '{print $3}' | awk '{print $1}'`
	if [ -z "$hostid" ]
	then
		echo "Record does not exist"
		exit 1
	fi
        aws route53 list-resource-record-sets --hosted-zone-id "$hostid" --output text | grep $record -A 20 > input.txt
        count=0
        TXT=1
	A=1
	MX=1

        line=`aws route53 list-resource-record-sets --hosted-zone-id "$hostid" --output text | grep $record`
        noffields=`echo $line | wc -w`
        if [ $noffields -eq 4 ]
        then
    		type=`echo $line | awk '{print $4}'`
        elif [ $record == $domainname ]
        then
    		echo "Enter the record type you want to delete"
		read type
	else
		type=`echo $line | awk '{print $3}'`
	fi

	while read line
        do
                name=`echo $line | awk '{print $1}'`
                if [ $name == RESOURCERECORDSETS ]
                then
			if [ $noffields -eq 4 ]
			then
				recordtype=`echo $line | awk '{print $4}'`
			else
				recordtype=`echo $line | awk '{print $3}'`
			fi
			if [ $recordtype == $type ]
			then
				((++count))
			fi
                fi
        done < input.txt

	if [ $count -eq 1 ] && [ $type == 'TXT' ]
        then
		TXT=0
	elif [ $count -eq 1 ] && [ $type == 'A' ]
	then
		if [ $name != "ALIASTARGET" ]
		then
			A=0
		fi
	elif [ $count -eq 1 ] && [ $type == 'MX' ]
	then
		MX=0
        fi

        case $type in
                A)
                        a_record $record $A
                        ;;
                CNAME)
                        cname_record $record
                        ;;
                TXT)
                        txt_record $record $TXT
                        ;;
                MX)
                        mx_record $record $MX
                        ;;
		NS)
			;;
		SOA)
			;;
                *)
                        echo "No valid recordtype found" | tee -a log/$0.log
                        ;;
        esac
}

remove_all_records()
{
	if [ -z $2 ]
	then
        	echo "Enter the zone name whose records you want to delete" | tee -a log/$0.log
        	read domainname
        	hostid=`aws route53 list-hosted-zones --output text | grep -w $domainname | awk -F"/" '{print $3}' | awk '{print $1}'`
	else
		domainname=$1
		hostid=$2
	fi
	echo "Taking backup of the zone before deleting all the records" | tee -a log/$0.log
	zone_backup $domainname $hostid
        aws route53 list-resource-record-sets --hosted-zone-id $hostid --output text > file.txt
	A=0
	MX=0
	TXT=0

	while read line
        do
                name=`echo $line | awk '{print $1}'`
                noffields=`echo $line | wc -w`
                if [ $name == RESOURCERECORDSETS ]
                then
                        if [ $noffields -eq 4 ]
                        then
				record=`echo $line | awk '{print $2}' | sed 's/.$//'`
                                type=`echo $line | awk '{print $4}'`
                        else
				record=`echo $line | awk '{print $2}' | sed 's/.$//'`
                                type=`echo $line | awk '{print $3}'`
                        fi
		else
			continue
                fi

		if [ $type == 'A' ] && [ $A -eq 0 ]
		then
			a_record $record $A
			A=1
		elif [ $type == 'MX' ] && [ $MX -eq 0 ]
		then
			mx_record $record $MX
			MX=1		
		elif [ $type == 'CNAME' ]
		then
			cname_record $record
		elif [ $type == 'TXT' ]
		then
			txt_record $record $TXT
			TXT=1
		elif [ $type == 'NS' ] || [ $type == 'SOA' ]
		then
			continue
		fi
        
	done < file.txt
}

remove_a_zone()
{
	echo "Enter the zone you want to delete" | tee -a log/$0.log
	read domainname
	zone=`aws route53 list-hosted-zones --output text | grep -w $domainname`
	if [ -z "$zone" ]
	then
		echo "$domainname zone does not exist"
		exit 1
	fi
	hostid=`aws route53 list-hosted-zones --output text | grep -w $domainname | awk -F"/" '{print $3}' | awk '{print $1}'`
        aws route53 list-resource-record-sets --hosted-zone-id $hostid --output text > input.txt

	line=`wc -l input.txt | awk '{print $1}'`
	if [ "$line" -eq 7 ]
	then
		aws route53 delete-hosted-zone --id $hostid 2>&1 | tee -a log/$0.log
		echo "$domainname zone has been deleted" | tee -a log/$0.log
	else
		remove_all_records $domainname $hostid
		aws route53 delete-hosted-zone --id $hostid 2>&1 | tee -a log/$0.log
                echo "$domainname zone has been deleted" | tee -a log/$0.log
	fi
}

pattern_in_recordvalue()
{
	echo "Enter the recordvalue pattern to delete the record" | tee -a log/$0.log
	read pattern
	echo "Traversing the hosted zone list and finding the hosted zone ids" | tee -a log/$0.log
	aws route53 list-hosted-zones --output text | awk -F"/" '/hostedzone/ {print $3}' | awk '{print $1}' > hosted-zone-ids.txt

	for hostid in `cat hosted-zone-ids.txt`
	do
		echo "Checking for the pattern \"$pattern\" in $hostid"
		aws route53 list-resource-record-sets --hosted-zone-id "$hostid" --output text > input.txt
		count=0
		while read line
		do
			name=`echo $line | awk '{print $1}'`
	        	if [ $name == RESOURCERECORDSETS ]
	        	then
				noffields=`echo $line | wc -w`
				if [ $noffields -eq 4 ]
				then
					recordname=`echo $line | awk '{print $2}'`
		          		recordttl=`echo $line  | awk '{print $3}'`
		                	recordtype=`echo $line | awk '{print $4}'`
				else
	            	    		recordname=`echo $line | awk '{print $2}'`
		            	    	recordtype=`echo $line | awk '{print $3}'`
				fi
	        	else
	        		if [ $noffields -eq 4 ]
	        		then
            	    		        recordvalue=`echo $line | awk '{for (i=2; i<NF; i++) printf $i " "; print $NF}'`
            	                else
            	    		        dnsname=`echo $line | awk '{print $2}'`
            	    		        healthcheck=`echo $line | awk '{print $3}'`
            	    		        aliashostedid=`echo $line | awk '{print $4}'`
            	        	fi
				if [[ $recordvalue == *"$pattern"* ]]
	        		then
					if [ $recordtype == 'CNAME' ]
        				then
						echo "Echo Pattern Found in $hostid"
						echo "`date`    :    $recordname       $recordttl    IN      $recordtype     $recordvalue" >> pattern.bkup
        					cat > change-rr-sets.json << End
{
    "Changes": [
        {
            "Action": "DELETE",
            "ResourceRecordSet": {
                "Name": "$recordname",
                "Type": "CNAME",
                "TTL": $recordttl,
                "ResourceRecords": [
                    {
                        "Value": "$recordvalue"
                    }
                ]
            }
        }
    ]
}
End
						echo "Deleting record : $recordname  $recordttl   IN      $recordtype  $recordvalue" | tee -a log/$0.log
			                	aws route53 change-resource-record-sets --hosted-zone-id "$hostid" --change-batch file:///data/home/rpanda/aws/new/change-rr-sets.json 2>&1 | tee -a log/$0.log
						((++count))
					fi	
				fi
			fi
		done < input.txt
		if [ $count -eq 0 ]
		then
			echo "Pattern not found in $hostid"
		fi
done
}

echo "*********************************"
echo "*********************************"
echo "Starting Script : $0" | tee -a log/$0.log
echo "Date : `date`" | tee -a log/$0.log
echo "=========================" | tee -a log/$0.log
echo "1. Remove a record" | tee -a log/$0.log
echo "2. Remove a zone" | tee -a log/$0.log
echo "3. Remove record based on pattern in recordvalue" | tee -a log/$0.log
echo "=========================" | tee -a log/$0.log
echo "Select what you would like to perform" | tee -a log/$0.log
read response

case $response in
	1)
		echo "You have choose : $response" | tee -a log/$0.log
		remove_a_record
		;;
	2)
		echo "You have choose : $response" | tee -a log/$0.log
		remove_a_zone
		;;
	3)
		echo "You have choose : $response" | tee -a log/$0.log
		pattern_in_recordvalue
		;;
	*)
		echo "You have choose incorrectly" | tee -a log/$0.log
		;;
esac
